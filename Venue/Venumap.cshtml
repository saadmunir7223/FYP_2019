@model SportAholics.ViewModels.VenueVm

@{
    ViewBag.Title = "Create Venue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .searchboxmap {
        width: 60%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }
</style>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCYawtVqAWelixWKy1tFESwmQP876qIdoc&libraries=places"></script>
<script src="~/Scripts/googlescript/createvenu.js"></script>
<fieldset></fieldset>
<div class="col-md-12">  
        <input id="pac-input" type="text" class="searchboxmap" placeholder="Search Place....">
   
   
    @*<span class="search-icon">
        <span class="glass"></span>
        <span class="handle"></span>
    </span>*@  
    <div id="dvMap" style="width: 1050px; height: 450px;">
    </div>
</div>
    <!----->
    <div class="modal fade" id="largeModal" tabindex="-1" role="dialog" aria-labelledby="largeModal" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="opacity: 0.8;background: rgba(18, 39, 23, 0.2);background-size: cover;border: 1px solid rgba(255, 255, 255, 0.52); color:#000000">
                <div class="modal-header" style="background-color:#ffd800">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h5 class="modal-title" id="myModalLabel" style="color:#ffffff">Venue</h5>
                </div>
                <div class="modal-body" style="color:#000000">
                    @using (Html.BeginForm("Create", "Venue", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <div class="card" style="opacity: 0.8;background: rgba(18, 39, 23, 0.2);background-size: cover;border: 1px solid rgba(255, 255, 255, 0.52); color:#000000">
                            @Html.AntiForgeryToken()
                            <div class="card-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SportCategory)
                                            @Html.DropDownListFor(m => m.SportCategory, Model.SportCategoryList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SportCategory, "", new { @class = "text-danger" })
                                        </div>
                                    </div>@*@disabled = ""*@
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Longitude)
                                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Latitude)
                                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Description)
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Capacity)
                                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.StartDateTime)
                                            <div class="input-group input-large timepicker input-daterange" data-date="10/11/2017" data-date-format="mm/dd/yyyy">
                                                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control clockpicker ", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                                                <span class="field-validation-valid" data-valmsg-for="SystemDateTime" data-valmsg-replace="true"></span>
                                                <span class="input-group-addon">
                                                    to
                                                </span>
                                                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control clockpicker ", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                                                <span class="field-validation-valid" data-valmsg-for="SystemDateTimeTo" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Status)
                                            @Html.DropDownList("Status", new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "1" }, new SelectListItem { Text = "Not-Active", Value = "0" } }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>                                  
                                    <div class="col-md-4 pr-1">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MaxPlayers)
                                            @Html.EditorFor(model => model.MaxPlayers, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
                                        </div>
                                    </div>                                    
                                </div>
                                <div>                                   
                                </div>
                                <button type="submit" class="btn-sm btn-info btn-fill pull-right">Create</button>
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-sm btn-success btn-fill" })
                            </div>
                        </div>}
                </div>

            </div>
        </div>
    </div>
    <!----->

@section Scripts {
<script src="~/Content/assets/js/plugins/bootstrap-clockpicker.js"></script>
<script src="~/Content/assets/js/plugins/date.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        jQuery(document).ready(function () {
            createvenu.initi();          
        });
    </script>
<script>
    $('#VenueDate').datepicker({
            uiLibrary: 'bootstrap4',
            format: 'dd/mm/yyyy',
        icons: {
            rightIcon: '<span class="icons nc-icon  nc-credit-card"></span>'
        }
        });
</script>
   <script type="text/javascript">
       // $('.clockpicker').clockpicker({
       //     placement: 'top',
       //     align: 'left',
       //     donetext: 'Done'
       //});
       var input = $('#StartDateTime');
       input.clockpicker({
           placement: 'top',
           autoclose: true
       });
       var input = $('#EndDateTime');
       input.clockpicker({
           placement: 'top',
           autoclose: true
       });
</script>
}
