@model SportAholics.ViewModels.EventVm
@using (Html.BeginForm("Create", "Event", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    //style = "background-image:url(/GooglMarker/Fifa-Wallpaper-005.jpg); background-repeat: no-repeat;background-size: 100% 100%"



    @Html.AntiForgeryToken()
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card" style="opacity: 0.8;background: rgba(18, 39, 23, 0.2);background-size: cover;border: 1px solid rgba(255, 255, 255, 0.52);">
                        @*<div class="card-header" style="background-color:#ffd800">
                            <h4 class="card-title" style="color:#ffffff">Event</h4>*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*</div>*@
                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StartDateTime)
                                        <div class="input-group input-large timepicker input-daterange" data-date="10/11/2017" data-date-format="mm/dd/yyyy">
                                            @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control clockpicker ", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                                            <span class="field-validation-valid" data-valmsg-for="SystemDateTime" data-valmsg-replace="true"></span>
                                            <span class="input-group-addon">
                                                to
                                            </span>
                                            @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control clockpicker ", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
                                            <span class="field-validation-valid" data-valmsg-for="SystemDateTimeTo" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.VenueID)
                                        @Html.DropDownListFor(model => model.VenueID, Model.VenueList, "Please select", new { @class = "form-control", @onchange = "fillmapattr()" })
                                        @Html.ValidationMessageFor(model => model.VenueID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Date)
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @onchange = "checktimeslot.init()" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Longitude)
                                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Latitude)
                                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description)
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Status)
                                        @Html.DropDownList("Status", new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "1" }, new SelectListItem { Text = "Not-Active", Value = "0" } }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vacancies)
                                        @Html.EditorFor(model => model.Vacancies, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Vacancies, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Category)
                                        @Html.DropDownListFor(m => m.Category, Model.CategoryList, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                @*<div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PlayerID)
                                        @Html.EditorFor(model => model.PlayerID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PlayerID, "", new { @class = "text-danger" })
                                    </div>
                                                                    </div>*@

                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MaxPlayers)
                                        @Html.EditorFor(model => model.MaxPlayers, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn-sm btn-info btn-fill pull-right">Create</button>
                            <div>
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-sm btn-success btn-fill" })
                            </div>
                            <div class="clearfix"></div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
